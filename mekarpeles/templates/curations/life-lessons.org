Organizing Life

* Good Reads
1. [[http://jamesclear.com/marginal-gains][Marginal Gains]]
2. 


* Experiment
1. Schedule a meeting with someone "impossible" to connect with to
   discussion your and their mutual passion once a month (researchers,
   entrepreneurs, artists)
2. Have a room in your house dedicated to a language or behaviour. (spatial locality)

* Life Learnings
- Protocols are Key.
- It's easy to get a no, if you want a yes, first achieve a related accomplishment which one would be irresponsible to turn down.
- Systems should be designed which give users the power of choice, not the service provider.
- Effective procrastination is key -- taking breaks and shifting contexts is important, but if you differentiate between work and play, something is wrong.
- Recaputlate and re-integrate often
- Life favors the prepared (paraphrasing Louis Pasteur @Q529)
- Have multiple projects you've thought about, even if you can't work on them all. Think about who can work on them.
- maintain a list of `n` people who are worth helping / investing in
- publishing your belief, early, on an topic is a good way to figure out if you're wrong and who cares about the issue being right.
- Before you complain about equity in a project, figure out if you would be doing a project even if your partners weren't
- 80/20 engineering may be good enough to create something valuable and working, but remember the remaining 20% often includes a strategy for adoption
** 1% Optimizations (Organization: Storage & Retrieval)
1. Require everything have a place. You'll spend less time searching for your phone, wallet or purse.
2. When you're loading a dishwasher, place all similar cuttlery together. It's a
   constant time insertion and will be a constant time retrieval, versus a linear retrieval
3. Put your socks, underware, and shirts in separate mesh nets when washing and
   drying to reduce time separating your items.
4. Buy all of the same white socks.
5. If you want to do something more, make it spatially and temporally
   local. For instance, leave your guitar out of its case and in your
   way. The same is true of documents or tabs in your browser. The
   same is true for negative influences; reduce their spatial and
   local presence.
6. Pinned Tabs: My calendar, gmail, a Table of Contents of all my
   projects, a universal TODO list, chat systems



* Philosophy
If you don't have an answer to the following, then you're living life without thinking/considering these things:
- If someone asks you for your biggest life learning, you should have some pre-meditated answer
- If someone asks you for your favorite philosopher, you should have some
  pre-meditated answer. A philosopher is simply one who is passionate about
  something. Who cares about something, thinks about something, and develops
  conventions and methodologies to address this something. The only reason not
  to have a favourite is because you haven't found a "something" you care enough
  about that you're willing to learn from others.
- If someone asks you your life mission, or what you stand for, you should have some pre-meditated answer


** Universal Todo List UUID('f73de879-b51c-4ac3-b5f4-db4f0e37d021')
I shall maintain a Universal TODO List which shows me all open tasks
and what is planned for a given day. 

1. The same todo item shall never exist in more than one source (e.g. database,
   file, website/service) unless it's a synched backup. One single point of
   truth, many symlinks.


** Universal Table of Contents
1. Have a Table of Contents + Todo list for your learnings and questions

* Building Systems
1. Build systems which compound and value to each other (common infrastructure)
2. Build systems which are isolatable (easy for people to setup and 
3. Be weary of using bleeding edge tools which don't have some stand-in replacement
4. Shims are nice to coalesce services into interoperability, but is O(n).
   Constant time requires protocol level agreement (easier with distributed,
   living protocols/systems, where features can be arbitrary incorporated into
   each node's protocol and subsets of systems can choose to agree)

* Conventions for Note Taking
- Every document should have a date
- Every file, section, blurb (ideally) has a unique tag (markup or numeric) which allows it to be indexed/searched/referenced.
- Every note should (ideally) be semantically tagged
- Every note should exist only once (single point of truth) and by symlinked by other things that need it
- Todo items and notes should work the same way. Todo items are just actionable notes, thus: 

*** Open questions
How can 
autocomplete for tagged notes, as we're typing them?



* Rules for Projects (4-26-2015)
Maintain a list of problems which bother you and a Table of Contents of all projects you're working on.

1. Every project should have a registered domain and a landing page
2. Every project should have a team of > 2 interested folks (who know about it)
3. Every project should have an executive summary
4. Every project shall have a repository (for version control + code + assets)
5. Every project shall have a todo list #project tag in the universal TODO list
6. Every project shall have a top-level table of contents (TOC) enumerating the aforementioned

** Executive Summary
1. A list of existing services
2. Market research
3. Simple roadmap of milestones to guage t
4. Projections + business model for breaking even (based on roadmap)
5. Unique stategy for customer acquisition

* Accountability
- Maintain a spreadsheet to track important(?) metrics
- Have a gym partner

* Provenance: Keep a trail
1. Write everything down, record everything, always have access to these records; make it handy
2. Maintain a table of contents for your life
3. Maintain a list of the problems which you want to solve, and ideas for solving them
4. Use version control on everything you can
5. Keep a common book where you evaluate what problems are important to you, why, they are important, 

* Connect
1. When you meet two people working on a similar problem, introduce them. And do
   so in a way which proposes collaboration on an element on which they
   complimentary, not competitive.

* Research
1. Research people before you connect. Look through their linkedin, understand
   who they know. Never ask if they "know someone". Do the work for them.

* Permenance
This is a hard problem. Turning every computer in the world into an
equitable/fair network of distributed, secure, non-monopolizable storage where
people can get paid to store files and ensure redundancy is a good step
(Filecoin, IPFS)


* Connect everything you can
1. List the ways in which problems are or could be connected.
2. Be an edge connector in research: Become an expert in a single field by becoming familiar
   with the fields around it and its application (Knuth)
3. Record observations and outcomes of (whether good or bad)

* Dogfood
1. Try your ideas yourself before approaching others
2. 
